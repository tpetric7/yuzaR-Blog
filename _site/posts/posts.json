[
  {
    "path": "posts/2020-12-26-how-to-create-a-blog-or-a-website-in-r-with-distill-package/",
    "title": "How to create a blog or a website in R with {distill} package (in progress!)",
    "description": "If you're not online, you don't exist. A personal webpage or a blog became the business card of the digital century. It shows who you are and what you are capable of. Thus: show, don't tell.",
    "author": [
      {
        "name": "Yury Zablotski",
        "url": "https://yury-zablotski.netlify.app/"
      }
    ],
    "date": "2020-12-26",
    "categories": [
      "R & the Web",
      "videos"
    ],
    "contents": "\n\nContents\nWhy should we use distill?\nManual intermittent publishing (deploying)1. Install distill package\n2. Create your blog either manually with RStudio or with one line of code2.1. with RStudio\n2.2. with one line of code\n\n3. Build your website\n4. Publish your blog (or a website) via Netlify\n5. Create a new blog-post\n\nAutomated continuous publishing (deploying)1. Install distill and usethis packages\n2. Create your blog either manually with RStudio or with one line of code2.1. with RStudio\n2.2. with one line of code\n\n3. Build your website\n4. Connect to your github4.1. Stage and Commit\n4.2. Run “usethis::use_github()” to create a new Github repository\n\n5. Publish your blog (or a website) via Netlify\n6. Create a new blog-post\n\nBlog configuration with \"_site.yml\"\nTheming - change desing and appearence of your blog\nPimp your contentThumbnails\nFootnotes\nFigures\nTables\nAsides\n\nUseful ressources\n\nWhy should we use distill?\nBecause it’s an easy, quick and free way to go online today. All you need to create a website or a blog is R, RStudio and Netlify account. Moreover, it requires very little programming. It might not look too fancy in the beginning (though totally enough for me), but with some effort you’ll be able to re-design your website as you wish. Besides, distill was originally aimed to make scientific online-publishing easier, so, it can’t be too bad ;). By the way, The blog you reading right now was created with distill. How? That’s what this article is all about.\nIf you don’t have or don’t want to have a Github account (and continuous deployment), just read on. But if you are comfortable with Github and wanna continuously deploy via Github, jump to the chapter “Automated continuous publishing (deploying)”.\nManual intermittent publishing (deploying)\nWhy should we even consider manual instead of automated? Well, for some non-programmers going with the continuous deployment via Github immediately might be very challenging and frustrating. I’ve been there. We all know what is “better” and “more time effective” in the long run, but the complexity might sometimes turn us off from doing something we would love to, resulting into “it’s just not my cup of tea” attitude. Other do not even need the continuous deployment, because they publish rarely, e.g. once per month, but would still like to be online. Going to the WordPress and co., which would most likely screw either code or code-output, is not always a solution. Fortunately, distill and Netlify greatly reduce the complexity of going online. Thus, have a look at the video and then follow the step by step procedure described below and you’ll be online with your blog in minutes.\n1. Install distill package\n\n\ninstall.packages(\"distill\")\n\n\n\n2. Create your blog either manually with RStudio or with one line of code\n2.1. with RStudio\nopen RStudio\nFile => New Project… => New Directory => Distill Blog\n“Directory name” will be the name of the folder, where all the documents from your blog will be stored\nChoose the directory where this folder supposed to be stored\nGive your blog a name. You’ll be able to rename it later\nClick “Create project”\n2.2. with one line of code\n\n\ndistill::create_blog(dir = \"my blog\", title = \"A cool name of my blog\")\n\n\n\n3. Build your website\nA new RStudio window with newly created files and folders (right left corner) will open itself. One of the folders \"_posts\" will contain all your posts. There are already some examples of it. But don’t bother about it now.\nFind the “Build” tab and press “Build Website”. You’ll see the process of building.\nClick “Open in Browser” and explore your website\nWe aren’t online yet. But very soon!\n4. Publish your blog (or a website) via Netlify\ngo the https://www.netlify.com/, sing up for Netlify (I used the Email way) and confirm your Email.\nIn Netlify you’ll see a window with: “Want to deploy a new site without connecting to Git? Drag and drop your site folder here”. If you somehow don’t see it, find and press “Team overview”.\ngo to the directory of your blog and find the \"_site\" folder\ndrag and drop the \"_site\" folder from your computed into this window\nwait a moment till the “Production” tab produces green colored “Published” and you’ll get a funny named website in the left top corner, also green and starting with “https://”. My was “https://condescending-darwin-bc567f.netlify.app” :)\nclick on it\nCongrats, you are online!\ngo back to Netlify, click “Site settings” => “Change site name”\nrename your site (e.g. better-name) and hit “Save”\nClick on the “better-name.netlify.app” to make sure the name has changed and the site is still working\ngo back to RStudio to populate your blog\n5. Create a new blog-post\nrun the line below with the name of your choice\n\n\ndistill::create_post(\"My second blog post...this one will be really good :-)\")\n\n\n\na new partly pre-filled Rmarkdown document will open itself in RStudio\nfill it with some text and code as you usually do with Rmarkdown documents\nhit “Knit”. NOTE: you’ll need to always “Knit” all changed or created blog-posts individually. It is the only way to update them. “Build Website” would not re-render them for you, because it’s computationally expensive and prone to problems. However, the distill-Website (we are doing distill-Blog now) would. You can learn more about the difference between them here.\nThis new post exists only on your local computer, still not online, thus…\ngo back to Netlify and click “Deploys” tab, where you’ll see another window with: “Need to update your site? Drag and drop your site folder here”\ndrag and drop the \"_site\" folder there and wait till “Production” tab produces green “Published”\nclick on the “better-name.netlify.app” to make sure the new blog-post appeared\nclick on your post and enjoy your creative work for a moment ;), then\ngo back to RStudio and repeat step 5\nAutomated continuous publishing (deploying)\nContinuous deployment is cool! But the path there can be a little prickly. This path may take a couple of hours or days (in my case 🙈). But, once there, you quickly forget all the troubles and using Github with continuous deployment becomes your second nature. So, I think there are many people which deploy either still manually or already continuously. But not many of them in the middle (I might be wrong though). Thus, I will assume you already have installed Git on your computer, created a Github account and connected your RStudio to your Github. If not, but you wanna be there, I could recommend a single short free online book which helped me go through it: Happy Git and GitHub for the useR. You’ll only need it once!\n1. Install distill and usethis packages\n\n\ninstall.packages(\"distill\")\ninstall.packages(\"usethis\")\n\n\n\n2. Create your blog either manually with RStudio or with one line of code\n2.1. with RStudio\nopen RStudio\nFile => New Project… => New Directory => Distill Blog\n“Directory name” will be the name of the folder, where all the documents from your blog will be stored\nChoose the directory where this folder supposed to be stored\nGive your blog a name. You’ll be able to rename it later\nClick “Create project”\n2.2. with one line of code\n\n\ndistill::create_blog(dir = \"my blog\", title = \"A cool name of my blog\")\n\n\n\n3. Build your website\nA new RStudio window with newly created files and folders (right left corner) will open itself. One of the folders \"_posts\" will contain all your posts. There are already some examples of it. But don’t bother about it now.\nFind the “Build” tab and press “Build Website”. You’ll see the process of building.\nClick “Open in Browser” and explore your website\nWe aren’t online yet. But very soon!\n4. Connect to your github\nRun use_git() and answer two questions:\n“Is it ok to commit them?” Don’t commit by typing 3 for “No”, or “Nope” or similar.\n“A restart of RStudio is required to activate the Git pane Restart now?” Restart by typing 2 for “Yes” or “Yup”.\n\n\n\nusethis::use_git() \n\n\n\nAfter restart you’ll see a new “Git” tab appear between the “Build” and “Tutorial” tabs. That’s gut!\nclick on the “Git” tab and you’ll see empty boxed under “Staged”, lot’s of yellow question marks under “Status” and the file-names under “Path”.\n4.1. Stage and Commit\ncheck all the boxes and press “Commit” button, which is (vertically) between the “Status” and “History” tabs. A colorful window will pop up. This window describes all the changes you are about to make to your blog.\nFind the “Commit message” box and definitely describe what changes you have done (e.g. “First commit”), because then you’ll always be able to get back to the previous version, in case something stops working. That’s what they call - a version control.\npress “Commit”\nwait until you see the “Close” button and close “Git commit”\nforget the other pop up window and go back to RStudio.\n4.2. Run “usethis::use_github()” to create a new Github repository\n\n\nusethis::use_github() \n\n\n\nA new repository will be automatically created on your Github profile and the new browser window with your Github will pop up.\nIf you’ll be asked: “Which git protocol to use?”, choose the one with “https” and if you’ll then be asked: “Are title and description ok?”, agree to proceed.\nNOTE: if something (e.g. Github Personal Access Token) doesn’t work, get back to the Happy Git and GitHub for the useR book and work through it if you still didn’t. You’ll only need it once!\n5. Publish your blog (or a website) via Netlify\nsign into your Netlify account, if have one, if not…\ngo the https://www.netlify.com/, sing up for Netlify either with your Email or with your Github profile.\nclick a green box “New site from Git”\nconfigure Netlify on “Github”,\nchoose a newly created repository, you’ll recognize the name (“my new blog”?).\nNOTE: Make sure to set the “Publish Directory” to \"_site\" (could be “docs” if you checked some boxes while creating new project). \"_site\" (or “docs”) contains all the information about your blog.\nclick “Deploy”!\nwait a moment till the “Production” tab produces green colored “Published” and you’ll get a funny named website in the left top corner, also green and starting with “https://”. My was “https://condescending-darwin-bc567f.netlify.app” :)\nclick on it\nCongrats, you are online!\ngo back to Netlify, click “Site settings” => “Change site name”\nrename your site (e.g. better-name) and hit “Save”\nclick on the “better-name.netlify.app” to make sure the name has changed and the site is still working\ngo back to RStudio to populate your blog\n6. Create a new blog-post\nrun the line below with the name of your choice\n\n\ndistill::create_post(\"My second blog post...this one will be really good :-)\")\n\n\n\na new partly pre-filled RMarkdown document will open itself in RStudio\nfill it with some text and code as you usually do with RMarkdown documents\nhit “Knit”. NOTE: you’ll need to always “Knit” all changed or created blog-posts individually. It is the only way to update them. “Build Website” would not re-render them for you, because it’s computationally expensive and prone to problems. However, the distill-Website (we are doing distill-Blog now) would. You can learn more about the difference between them here.\nThis new post exists only on your local computer, still not online, thus…\ngo to the “Git” tab in RStudio and check all the boxes\npress “Commit”, a new window will pop up\nadd description of your commit\nagain press “Commit”\nwait until you see the “Close” button and close “Git commit” pop up window\npress “Push”\nwait until you see the “Close” button and close “Git push” pop up window\nclose or ignore the other pop up window\nget back to your blog “better-name.netlify.app” and refresh (it may take a few seconds, so, don’t panic if the first refresh don’t work). You should see a new blog-post.\nCongrats! You now continuously deploy your online blog!\nclick on your post and enjoy your creative work for a moment ;), then\ngo back to RStudio and repeat step 6 with following routine:\nCreate or change posts\nKnit\nCommit\nPush\n\nYou don’t need to commit and push every change, only important ones. Think of this process as really saving the progress you made on your blog.\nBy the way, if you don’t want to publish your post until you really satisfied with it, you can start out as a draft:\n\n\ndistill::create_post(\"Another nice post\", draft = TRUE)\n\n\n\nBlog configuration with \"_site.yml\"\nOpen \"_site.yml\". You’ll see something like that:\n\nname: \"Your cool webpage\"\ntitle: \"Your cool webpage title\"\ndescription: |\n  Exploring something very important.\nbase_url: https://beta.rstudioconnect.com/content/your_thing/\nnavbar:\n  logo: images/fancy_logo.png\n  right:\n    - text: \"Home\"\n      href: index.html\n    - text: \"About\"\n      href: about.html\n    - text: \"Rest\"\n      href: rest.html\n    - icon: fa fa-rss\n      href: index.xml\noutput: distill::distill_article\n\n\"_site.yml\" is the most important document for your website. Configure it carefully and slowly. You can add a lot of useful things: categories, google-analytics, customize the navigation bar, add references, new theme with CSS code for an individual design of your site, icons of twitter & co. and much more, which is not to important for a new site and can be added at any time.\nThe best way I found to do this, is just to find the \"_site.yml\" or “theme.css” on Github of other distill-blogs and get inspiration from them play with your own code (I hope nobody is offended by this sentence due to the open source nature of R, but please let me know if it’s wrong and I’ll remove this recommendation!).\nWhile you already have \"_site.yml\" file in your blog-folder, you don’t have a “theme.css” file. To get one, read on…\nTheming - change desing and appearence of your blog\nYou can modify the CSS code in your theme after creating it by running the following line of code:\n\n\ndistill::create_theme(name = \"theme\") \n\n\n\nTo activate a custom theme site-wide, add a theme key to the top-level of your \"_site.yml\" configuration file:\n\nname: \"Your cool webpage\"\ntitle: \"Your cool webpage title\"\ntheme: theme.css \n(...the rest of your _site.yml)\n\nPimp your content\nMost elements of improving your content are similar to the usual Rmarkdown syntax. Below I display some quick examples.\nThumbnails\nThumbnails (or previews) are the images which are displayed along the post. They serve as an eye catcher. You can add a preview image into the post’s metadata by adding a “preview” field:\n\ntitle: \"Blog post on how to write blog posts\"\ndescription: |\n  Here we were out of ideas, and therefore we are proud to announce\nour new post about how to write a post. Creativity is a b**ch! ... And I love her!\npreview: images/photo-of-me-because-I-am-sooo-beautifuuulll-toniiiight.png\n\nFootnotes\nFootnotes are created in the usual RMarkdown way, namely ^[here is the content of your footnote] and here are two examples 1 and 2. Point your cursor on the footnote number or scroll to the bottom of the page to see what’s inside of the footnote.\nFigures\n\n\nlibrary(tidyverse)\nggplot(mtcars, aes(hp, mpg)) + \n  geom_point() + \n  geom_smooth() +\n  theme_bw()\n\n\n\n\nTables\n\n\n# install.packages(\"gtsummary\")\nlibrary(gtsummary)\niris %>% \n  tbl_summary()\n\n\nhtml {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n}\n\n#tqvqulhvns .gt_table {\n  display: table;\n  border-collapse: collapse;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#tqvqulhvns .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#tqvqulhvns .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#tqvqulhvns .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 0;\n  padding-bottom: 4px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#tqvqulhvns .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#tqvqulhvns .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#tqvqulhvns .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#tqvqulhvns .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#tqvqulhvns .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#tqvqulhvns .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#tqvqulhvns .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#tqvqulhvns .gt_group_heading {\n  padding: 8px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#tqvqulhvns .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#tqvqulhvns .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#tqvqulhvns .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#tqvqulhvns .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#tqvqulhvns .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 12px;\n}\n\n#tqvqulhvns .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#tqvqulhvns .gt_first_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n}\n\n#tqvqulhvns .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#tqvqulhvns .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#tqvqulhvns .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#tqvqulhvns .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#tqvqulhvns .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#tqvqulhvns .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding: 4px;\n}\n\n#tqvqulhvns .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#tqvqulhvns .gt_sourcenote {\n  font-size: 90%;\n  padding: 4px;\n}\n\n#tqvqulhvns .gt_left {\n  text-align: left;\n}\n\n#tqvqulhvns .gt_center {\n  text-align: center;\n}\n\n#tqvqulhvns .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#tqvqulhvns .gt_font_normal {\n  font-weight: normal;\n}\n\n#tqvqulhvns .gt_font_bold {\n  font-weight: bold;\n}\n\n#tqvqulhvns .gt_font_italic {\n  font-style: italic;\n}\n\n#tqvqulhvns .gt_super {\n  font-size: 65%;\n}\n\n#tqvqulhvns .gt_footnote_marks {\n  font-style: italic;\n  font-size: 65%;\n}\nCharacteristic\n      N = 1501\n    Sepal.Length\n      5.80 (5.10, 6.40)\n    Sepal.Width\n      3.00 (2.80, 3.30)\n    Petal.Length\n      4.35 (1.60, 5.10)\n    Petal.Width\n      1.30 (0.30, 1.80)\n    Species\n      \n    setosa\n      50 (33%)\n    versicolor\n      50 (33%)\n    virginica\n      50 (33%)\n    \n        \n          1\n          \n           \n          Statistics presented: Median (IQR); n (%)\n          \n      \n    \n\nAsides\nYou can include notes or even plots “aside” (to the right) your article:\n\n\n\n\nHere the funny fact or some important info.\n\n\n\nUseful ressources\nThe best place to start is actually the Distill website itself: https://rstudio.github.io/distill.\nTom Mocks blog-post on how to build blogs with distill helped me a lot! https://themockup.blog/posts/2020-08-01-building-a-blog-with-distill/\n\nHere is the first footnote, which does not suppose to interrupt the main text!↩︎\nHere is the second↩︎\n",
    "preview": "posts/2020-12-26-how-to-create-a-blog-or-a-website-in-r-with-distill-package/images/distill_logo.png",
    "last_modified": "2020-12-28T12:12:19+01:00",
    "input_file": {},
    "preview_width": 240,
    "preview_height": 277
  }
]
