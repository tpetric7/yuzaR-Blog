<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:distill="https://distill.pub/journal/" version="2.0">
  <channel>
    <title>yuzaR-Blog</title>
    <link>https://yuzar-blog.netlify.app/</link>
    <atom:link href="https://yuzar-blog.netlify.app/index.xml" rel="self" type="application/rss+xml"/>
    <description>Data Science with R
</description>
    <generator>Distill</generator>
    <lastBuildDate>2023-08-15</lastBuildDate>
    <item>
      <title>(in progress) Epic Bar Plots with {ggplot2}</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2023-07-10-barplots</link>
      <description>Bar charts are useful for visualizing categorical data (percent stacked), group comparisons (means+CIs), and effective data communication through bar labels (basic_plot). In this video we'll learn the secrets of producing visually stunning bar charts using the {ggplot2} package.</description>
      <category>videos</category>
      <category>statistics</category>
      <category>visualization</category>
      <guid>https://yuzar-blog.netlify.app/posts/2023-07-10-barplots</guid>
      <pubDate>2023-08-15</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2023-07-10-barplots/thumbnail_barplots.png" medium="image" type="image/png" width="1920" height="1080"/>
    </item>
    <item>
      <title>R package reviews {sjPlot} How to Easily Visualize Data And Model Results</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2022-08-01-sjplot</link>
      <description>


&lt;h1 id="this-post-as-a-video"&gt;This post as a video&lt;/h1&gt;
&lt;p&gt;I recommend to watch a video first, because I highlight things I talk
about. It’s less then 9 minutes long.&lt;/p&gt;
&lt;div class="vembedr"&gt;
&lt;div&gt;
&lt;iframe src="https://www.youtube.com/embed/r3uKkmU4VQE" width="533" height="300" frameborder="0" allowfullscreen="" data-external="1"&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h1 id="all-the-functions-youll-learn-from-this-article"&gt;All the
functions you’ll learn from this article&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;view_df()&lt;/code&gt;, &lt;code&gt;plot_frq()&lt;/code&gt;,
&lt;code&gt;save_plot()&lt;/code&gt;, &lt;code&gt;plot_grpfrq()&lt;/code&gt;,
&lt;code&gt;plot_grid()&lt;/code&gt;, &lt;code&gt;plot_xtab()&lt;/code&gt;,
&lt;code&gt;tab_xtab()&lt;/code&gt;, &lt;code&gt;plot_gpt()&lt;/code&gt;,
&lt;code&gt;plot_likert()&lt;/code&gt;, &lt;code&gt;plot_model()&lt;/code&gt;,
&lt;code&gt;tab_model()&lt;/code&gt;, &lt;code&gt;plot_models()&lt;/code&gt;&lt;/p&gt;
&lt;h1 id="load-all-packages-at-once-to-avoid-interruptions"&gt;Load all
packages at once to avoid interruptions&lt;/h1&gt;
&lt;pre class="r"&gt;&lt;code&gt;library(tidyverse)   # for everything useful in R ;) 
library(ISLR)        # for &amp;quot;Wage&amp;quot; dataset about salaries
library(sjPlot)      # for easy visualization
library(likert)      # for &amp;quot;pisaitems&amp;quot; dataset with likert data
library(lme4)        # for mixed-effects models
library(lmerTest)    # for p-values in mixed-effects models&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="plot-data"&gt;Plot data&lt;/h1&gt;
&lt;h2 id="view-dataframe-with-view_df"&gt;View dataframe with
&lt;code&gt;view_df&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;View data-frame (&lt;code&gt;view_df&lt;/code&gt;) function with only 4
arguments, (1) your data, (2) show frequencies, (3) show percentages and
(4) show missing values, displays a range of numeric variables and the
counts + percentages of missing values and categorical variables, giving
you a nice big picture of your data.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;view_df(Wage, show.frq = T, show.prc = T, show.na = T)&lt;/code&gt;&lt;/pre&gt;
&lt;table style="border-collapse:collapse; border:none;"&gt;
&lt;caption&gt;
Data frame: Wage
&lt;/caption&gt;
&lt;tr&gt;
&lt;th style="border-bottom:double; font-style:italic; font-weight:normal; padding:0.2cm; text-align:left; vertical-align:top;"&gt;
ID
&lt;/th&gt;
&lt;th style="border-bottom:double; font-style:italic; font-weight:normal; padding:0.2cm; text-align:left; vertical-align:top;"&gt;
Name
&lt;/th&gt;
&lt;th style="border-bottom:double; font-style:italic; font-weight:normal; padding:0.2cm; text-align:left; vertical-align:top;"&gt;
Label
&lt;/th&gt;
&lt;th style="border-bottom:double; font-style:italic; font-weight:normal; padding:0.2cm; text-align:left; vertical-align:top;"&gt;
missings
&lt;/th&gt;
&lt;th style="border-bottom:double; font-style:italic; font-weight:normal; padding:0.2cm; text-align:left; vertical-align:top;"&gt;
Values
&lt;/th&gt;
&lt;th style="border-bottom:double; font-style:italic; font-weight:normal; padding:0.2cm; text-align:left; vertical-align:top;"&gt;
Value Labels
&lt;/th&gt;
&lt;th style="border-bottom:double; font-style:italic; font-weight:normal; padding:0.2cm; text-align:left; vertical-align:top;"&gt;
Freq.
&lt;/th&gt;
&lt;th style="border-bottom:double; font-style:italic; font-weight:normal; padding:0.2cm; text-align:left; vertical-align:top;"&gt;
%
&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
1
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
year
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
0 (0.00%)
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;" colspan="2"&gt;
&lt;em&gt;range: 2003-2009&lt;/em&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
2
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
age
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
0 (0.00%)
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee" colspan="2"&gt;
&lt;em&gt;range: 18-80&lt;/em&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
3
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
maritl
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
0 (0.00%)
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
&lt;ol style="list-style-type: decimal"&gt;
&lt;li&gt;Never Married&lt;br&gt;2. Married&lt;br&gt;3. Widowed&lt;br&gt;4. Divorced&lt;br&gt;5.
Separated
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
648&lt;br&gt;2074&lt;br&gt;19&lt;br&gt;204&lt;br&gt;55
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
21.60&lt;br&gt;69.13&lt;br&gt;0.63&lt;br&gt;6.80&lt;br&gt;1.83
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
4
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
race
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
0 (0.00%)
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
&lt;ol style="list-style-type: decimal"&gt;
&lt;li&gt;White&lt;br&gt;2. Black&lt;br&gt;3. Asian&lt;br&gt;4. Other
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
2480&lt;br&gt;293&lt;br&gt;190&lt;br&gt;37
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
82.67&lt;br&gt;9.77&lt;br&gt;6.33&lt;br&gt;1.23
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
5
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
education
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
0 (0.00%)
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
&lt;ol style="list-style-type: decimal"&gt;
&lt;li&gt;&amp;lt; HS Grad&lt;br&gt;2. HS Grad&lt;br&gt;3. Some College&lt;br&gt;4. College
Grad&lt;br&gt;5. Advanced Degree
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
268&lt;br&gt;971&lt;br&gt;650&lt;br&gt;685&lt;br&gt;426
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
8.93&lt;br&gt;32.37&lt;br&gt;21.67&lt;br&gt;22.83&lt;br&gt;14.20
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
6
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
region
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
0 (0.00%)
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
&lt;ol style="list-style-type: decimal"&gt;
&lt;li&gt;New England&lt;br&gt;2. Middle Atlantic&lt;br&gt;3. East North Central&lt;br&gt;4.
West North Central&lt;br&gt;5. South Atlantic&lt;br&gt;6. East South Central&lt;br&gt;7.
West South Central&lt;br&gt;8. Mountain&lt;br&gt;9. Pacific
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
0&lt;br&gt;3000&lt;br&gt;0&lt;br&gt;0&lt;br&gt;0&lt;br&gt;0&lt;br&gt;0&lt;br&gt;0&lt;br&gt;0
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
0.00&lt;br&gt;100.00&lt;br&gt;0.00&lt;br&gt;0.00&lt;br&gt;0.00&lt;br&gt;0.00&lt;br&gt;0.00&lt;br&gt;0.00&lt;br&gt;0.00
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
7
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
jobclass
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
0 (0.00%)
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
&lt;ol style="list-style-type: decimal"&gt;
&lt;li&gt;Industrial&lt;br&gt;2. Information
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
1544&lt;br&gt;1456
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
51.47&lt;br&gt;48.53
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
8
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
health
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
0 (0.00%)
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
&lt;ol style="list-style-type: decimal"&gt;
&lt;li&gt;&amp;lt;=Good&lt;br&gt;2. &amp;gt;=Very Good
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
858&lt;br&gt;2142
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
28.60&lt;br&gt;71.40
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
9
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
health_ins
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
0 (0.00%)
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
&lt;ol style="list-style-type: decimal"&gt;
&lt;li&gt;Yes&lt;br&gt;2. No
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
2083&lt;br&gt;917
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
69.43&lt;br&gt;30.57
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
10
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
logwage
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
0 (0.00%)
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee" colspan="2"&gt;
&lt;em&gt;range: 3.0-5.8&lt;/em&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
11
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
wage
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
0 (0.00%)
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;" colspan="2"&gt;
&lt;em&gt;range: 20.1-318.3&lt;/em&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/table&gt;
&lt;h2 id="plot-frequencies-with-plot_frq-plot_grpfrq-and-plot_grid"&gt;Plot
frequencies with &lt;code&gt;plot_frq&lt;/code&gt;, &lt;code&gt;plot_grpfrq&lt;/code&gt; and
&lt;code&gt;plot_grid&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;However, we often want to see an actual picture, for example, display
frequencies and percentages of categorical variables on a bar plot. For
that {sjPlot} package provides a convenient plot-frequencies
(&lt;code&gt;plot_frq&lt;/code&gt;) function, which does just that. For instance,
plotting &lt;em&gt;education&lt;/em&gt; shows that around 9% of people in our data
did not finish a high school, while around 14% have a PhD.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;Wage %&amp;gt;% 
  plot_frq(education)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file91b5ee1d8ca_files/figure-html/unnamed-chunk-4-1.png" width="672" /&gt;&lt;/p&gt;
&lt;p&gt;Since {sjPlot} package works with tidyverse 🥳, we can easily group
the data by any other categorical variable, let’s take &lt;em&gt;race&lt;/em&gt;,
and get frequencies and percentages for every group.
&lt;code&gt;plot_grid()&lt;/code&gt; function puts several subplots in a single plot
and even names the subplots. For instance, a subplot &lt;em&gt;C&lt;/em&gt; shows
that most of Afro-Americans in our dataset ARE highly educated. And of
coarse you can save this publication-ready plot with … surprise
surpriiise … &lt;code&gt;save_plot&lt;/code&gt; command.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;p &amp;lt;- Wage %&amp;gt;% 
  group_by(race) %&amp;gt;% 
  plot_frq(education) %&amp;gt;%
    plot_grid()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file91b5ee1d8ca_files/figure-html/unnamed-chunk-5-1.png" width="1344" /&gt;&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;save_plot(filename = &amp;quot;race_vs_education.jpg&amp;quot;, fig = p, width = 30, height = 19)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;quartz_off_screen 
                2 &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;While seeing counts and percentages of separate groups is cool, we
sometimes want to put groups directly near each other. And that’s
exactly what plot-grouped-frequencies (&lt;code&gt;plot_grpfrq&lt;/code&gt;)
function does. For instance, it clearly shows that most of the people
with lower &lt;em&gt;education&lt;/em&gt; degrees work in &lt;em&gt;factories&lt;/em&gt;, while
folks with higher &lt;em&gt;education&lt;/em&gt; degrees work with
&lt;em&gt;information&lt;/em&gt;.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;plot_grpfrq(
  var.cnt = Wage$education, 
  var.grp = Wage$jobclass)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file91b5ee1d8ca_files/figure-html/unnamed-chunk-7-1.png" width="672" /&gt;&lt;/p&gt;
&lt;h2 id="plot-or-display-cross-pivot-tables"&gt;Plot or display cross
(pivot) tables&lt;/h2&gt;
&lt;p&gt;This IS already useful, however, &lt;code&gt;plot_xtab&lt;/code&gt; function goes
one step further and displays percentages of &lt;em&gt;jobclasses&lt;/em&gt; inside
of every &lt;em&gt;educational&lt;/em&gt; degree as &lt;strong&gt;stacked-bars&lt;/strong&gt;,
where counts are identical to the previous plot, but every
&lt;em&gt;educational&lt;/em&gt; category as one 100 percent. Such display only
reinforces our hypothesis that highly educated folks usually work in the
IT and shows a clear association between &lt;em&gt;jobclass&lt;/em&gt; and
&lt;em&gt;education&lt;/em&gt;. As if that were not enough, &lt;code&gt;plot_xtab&lt;/code&gt;
even tests this hypothesis with the &lt;strong&gt;Chi-Squared test of
association&lt;/strong&gt; and displays a significant p-value and a large
effect size.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;# as stacked proportional bars
plot_xtab(
  x   = Wage$education, 
  grp = Wage$jobclass, 
  margin  = &amp;quot;row&amp;quot;, 
  bar.pos = &amp;quot;stack&amp;quot;,
  show.summary = TRUE,
  coord.flip   = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file91b5ee1d8ca_files/figure-html/unnamed-chunk-8-1.png" width="672" /&gt;&lt;/p&gt;
&lt;p&gt;So, &lt;code&gt;plot_xtab&lt;/code&gt; essentially visualizes &lt;strong&gt;cross
tables&lt;/strong&gt;, also known as &lt;strong&gt;pivot tables&lt;/strong&gt;. And if for
some reason you want an actual table with the results of a statistical
test, you can use &lt;code&gt;tab_xtab&lt;/code&gt; function instead.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;tab_xtab(
  var.row = Wage$education, 
  var.col = Wage$jobclass, 
  show.row.prc = T)&lt;/code&gt;&lt;/pre&gt;
&lt;table style="border-collapse:collapse; border:none;"&gt;
&lt;tr&gt;
&lt;th style="border-top:double; text-align:center; font-style:italic; font-weight:normal; border-bottom:1px solid;" rowspan="2"&gt;
education
&lt;/th&gt;
&lt;th style="border-top:double; text-align:center; font-style:italic; font-weight:normal;" colspan="2"&gt;
jobclass
&lt;/th&gt;
&lt;th style="border-top:double; text-align:center; font-style:italic; font-weight:normal; font-weight:bolder; font-style:italic; border-bottom:1px solid; " rowspan="2"&gt;
Total
&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="border-bottom:1px solid; text-align:center; padding:0.2cm;"&gt;
&lt;ol style="list-style-type: decimal"&gt;
&lt;li&gt;Industrial
&lt;/td&gt;
&lt;td style="border-bottom:1px solid; text-align:center; padding:0.2cm;"&gt;
&lt;ol start="2" style="list-style-type: decimal"&gt;
&lt;li&gt;Information
&lt;/td&gt;
&lt;/tr&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;tr&gt;
&lt;td style="padding:0.2cm;  text-align:left; vertical-align:middle;"&gt;
&lt;ol style="list-style-type: decimal"&gt;
&lt;li&gt;&amp;lt; HS Grad
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:center; "&gt;
&lt;span style="color:black;"&gt;190&lt;/span&gt;&lt;br&gt;&lt;span
style="color:#333399;"&gt;70.9 %&lt;/span&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:center; "&gt;
&lt;span style="color:black;"&gt;78&lt;/span&gt;&lt;br&gt;&lt;span
style="color:#333399;"&gt;29.1 %&lt;/span&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:center;  "&gt;
&lt;span style="color:black;"&gt;268&lt;/span&gt;&lt;br&gt;&lt;span
style="color:#333399;"&gt;100 %&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;tr&gt;
&lt;td style="padding:0.2cm;  text-align:left; vertical-align:middle;"&gt;
&lt;ol start="2" style="list-style-type: decimal"&gt;
&lt;li&gt;HS Grad
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:center; "&gt;
&lt;span style="color:black;"&gt;636&lt;/span&gt;&lt;br&gt;&lt;span
style="color:#333399;"&gt;65.5 %&lt;/span&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:center; "&gt;
&lt;span style="color:black;"&gt;335&lt;/span&gt;&lt;br&gt;&lt;span
style="color:#333399;"&gt;34.5 %&lt;/span&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:center;  "&gt;
&lt;span style="color:black;"&gt;971&lt;/span&gt;&lt;br&gt;&lt;span
style="color:#333399;"&gt;100 %&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;tr&gt;
&lt;td style="padding:0.2cm;  text-align:left; vertical-align:middle;"&gt;
&lt;ol start="3" style="list-style-type: decimal"&gt;
&lt;li&gt;Some College
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:center; "&gt;
&lt;span style="color:black;"&gt;342&lt;/span&gt;&lt;br&gt;&lt;span
style="color:#333399;"&gt;52.6 %&lt;/span&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:center; "&gt;
&lt;span style="color:black;"&gt;308&lt;/span&gt;&lt;br&gt;&lt;span
style="color:#333399;"&gt;47.4 %&lt;/span&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:center;  "&gt;
&lt;span style="color:black;"&gt;650&lt;/span&gt;&lt;br&gt;&lt;span
style="color:#333399;"&gt;100 %&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;tr&gt;
&lt;td style="padding:0.2cm;  text-align:left; vertical-align:middle;"&gt;
&lt;ol start="4" style="list-style-type: decimal"&gt;
&lt;li&gt;College Grad
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:center; "&gt;
&lt;span style="color:black;"&gt;274&lt;/span&gt;&lt;br&gt;&lt;span
style="color:#333399;"&gt;40 %&lt;/span&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:center; "&gt;
&lt;span style="color:black;"&gt;411&lt;/span&gt;&lt;br&gt;&lt;span
style="color:#333399;"&gt;60 %&lt;/span&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:center;  "&gt;
&lt;span style="color:black;"&gt;685&lt;/span&gt;&lt;br&gt;&lt;span
style="color:#333399;"&gt;100 %&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;tr&gt;
&lt;td style="padding:0.2cm;  text-align:left; vertical-align:middle;"&gt;
&lt;ol start="5" style="list-style-type: decimal"&gt;
&lt;li&gt;Advanced Degree
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:center; "&gt;
&lt;span style="color:black;"&gt;102&lt;/span&gt;&lt;br&gt;&lt;span
style="color:#333399;"&gt;23.9 %&lt;/span&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:center; "&gt;
&lt;span style="color:black;"&gt;324&lt;/span&gt;&lt;br&gt;&lt;span
style="color:#333399;"&gt;76.1 %&lt;/span&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:center;  "&gt;
&lt;span style="color:black;"&gt;426&lt;/span&gt;&lt;br&gt;&lt;span
style="color:#333399;"&gt;100 %&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;tr&gt;
&lt;td style="padding:0.2cm;  border-bottom:double; font-weight:bolder; font-style:italic; text-align:left; vertical-align:middle;"&gt;
Total
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:center;   border-bottom:double;"&gt;
&lt;span style="color:black;"&gt;1544&lt;/span&gt;&lt;br&gt;&lt;span
style="color:#333399;"&gt;51.5 %&lt;/span&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:center;   border-bottom:double;"&gt;
&lt;span style="color:black;"&gt;1456&lt;/span&gt;&lt;br&gt;&lt;span
style="color:#333399;"&gt;48.5 %&lt;/span&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:center;   border-bottom:double;"&gt;
&lt;span style="color:black;"&gt;3000&lt;/span&gt;&lt;br&gt;&lt;span
style="color:#333399;"&gt;100 %&lt;/span&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;td style="text-align:right; font-size:0.9em; font-style:italic; padding:0.2cm;" colspan="4"&gt;
χ&lt;sup&gt;2&lt;/sup&gt;=282.643 · df=4 · Cramer’s V=0.307 · p=0.000
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;(not part of the video) By the way, we can decide what kind of
percentages are calculated, rows or columns or even single cells,
whether we want to stack the bars and many more. It will automatically
conduct Fisher’s test of association if samples are small (&amp;lt;5).&lt;/p&gt;
&lt;h2
id="not-in-the-video-plot-grouped-proportional-tables-i-am-not-sure-its-very-intuitive"&gt;(not
in the video) Plot grouped proportional tables (I am not sure it’s very
intuitive)&lt;/h2&gt;
&lt;p&gt;The p-values are based on chisq.test of x and y for each grp.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;Wage %&amp;gt;% 
  plot_gpt(x = health_ins, y = jobclass, grp = education) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file91b5ee1d8ca_files/figure-html/unnamed-chunk-10-1.png" width="672" /&gt;&lt;/p&gt;
&lt;h2 id="plot-histograms-of-salaries-and-display-averages-sd"&gt;Plot
histograms of salaries and display averages + SD&lt;/h2&gt;
&lt;p&gt;But enough about counting, since our dataset is about salaries, let’s
figure our who earns more, industrial or information workers? Plot
frequencies function, which we used for counting, can also easily answer
this question if we give it a (1) &lt;code&gt;wage&lt;/code&gt; variable, (2) tell
it to plot a &lt;code&gt;histogram&lt;/code&gt;, (3) to show an average with
standard deviation and (4) to display a normal curve to see whether our
salaries are normally distributed. This visualization reveals that
industrial workers get 103 thousand dollars on average, while IT crowd
gets 17 thousand more.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;Wage %&amp;gt;% 
  group_by(jobclass) %&amp;gt;% 
  plot_frq(wage, type = &amp;quot;histogram&amp;quot;, show.mean = TRUE, normal.curve = TRUE) %&amp;gt;% 
  plot_grid()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file91b5ee1d8ca_files/figure-html/unnamed-chunk-11-1.png" width="672" /&gt;&lt;/p&gt;
&lt;h2 id="plot-likert-scales-as-centered-stacked-bars"&gt;Plot likert scales
as centered stacked bars&lt;/h2&gt;
&lt;p&gt;The last thing I’d like to share with you before we visualize models,
is a visualization of likert scale data. If you have same scales or
categories across different variables, &lt;code&gt;plot_likert&lt;/code&gt; function
nicely compares percentages of scales or categories across those
variables.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;data(pisaitems)

d &amp;lt;- pisaitems %&amp;gt;% 
  dplyr::select(starts_with(&amp;quot;ST25Q&amp;quot;))

view_df(d, show.frq = T, show.prc = T)&lt;/code&gt;&lt;/pre&gt;
&lt;table style="border-collapse:collapse; border:none;"&gt;
&lt;caption&gt;
Data frame: d
&lt;/caption&gt;
&lt;tr&gt;
&lt;th style="border-bottom:double; font-style:italic; font-weight:normal; padding:0.2cm; text-align:left; vertical-align:top;"&gt;
ID
&lt;/th&gt;
&lt;th style="border-bottom:double; font-style:italic; font-weight:normal; padding:0.2cm; text-align:left; vertical-align:top;"&gt;
Name
&lt;/th&gt;
&lt;th style="border-bottom:double; font-style:italic; font-weight:normal; padding:0.2cm; text-align:left; vertical-align:top;"&gt;
Label
&lt;/th&gt;
&lt;th style="border-bottom:double; font-style:italic; font-weight:normal; padding:0.2cm; text-align:left; vertical-align:top;"&gt;
Values
&lt;/th&gt;
&lt;th style="border-bottom:double; font-style:italic; font-weight:normal; padding:0.2cm; text-align:left; vertical-align:top;"&gt;
Value Labels
&lt;/th&gt;
&lt;th style="border-bottom:double; font-style:italic; font-weight:normal; padding:0.2cm; text-align:left; vertical-align:top;"&gt;
Freq.
&lt;/th&gt;
&lt;th style="border-bottom:double; font-style:italic; font-weight:normal; padding:0.2cm; text-align:left; vertical-align:top;"&gt;
%
&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
1
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
ST25Q01
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
Never or almost never&lt;br&gt;A few times a year&lt;br&gt;About once a
month&lt;br&gt;Several times a month&lt;br&gt;Several times a week
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
6682&lt;br&gt;13143&lt;br&gt;13995&lt;br&gt;20353&lt;br&gt;11436
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
10.18&lt;br&gt;20.03&lt;br&gt;21.33&lt;br&gt;31.02&lt;br&gt;17.43
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
2
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
ST25Q02
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
Never or almost never&lt;br&gt;A few times a year&lt;br&gt;About once a
month&lt;br&gt;Several times a month&lt;br&gt;Several times a week
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
24019&lt;br&gt;16789&lt;br&gt;10317&lt;br&gt;9489&lt;br&gt;4751
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
36.75&lt;br&gt;25.68&lt;br&gt;15.78&lt;br&gt;14.52&lt;br&gt;7.27
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
3
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
ST25Q03
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
Never or almost never&lt;br&gt;A few times a year&lt;br&gt;About once a
month&lt;br&gt;Several times a month&lt;br&gt;Several times a week
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
11131&lt;br&gt;16164&lt;br&gt;12818&lt;br&gt;14569&lt;br&gt;10658
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
17.04&lt;br&gt;24.74&lt;br&gt;19.62&lt;br&gt;22.30&lt;br&gt;16.31
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
4
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
ST25Q04
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
Never or almost never&lt;br&gt;A few times a year&lt;br&gt;About once a
month&lt;br&gt;Several times a month&lt;br&gt;Several times a week
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
20145&lt;br&gt;19961&lt;br&gt;12768&lt;br&gt;8797&lt;br&gt;3622
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top; background-color:#eeeeee"&gt;
30.85&lt;br&gt;30.57&lt;br&gt;19.55&lt;br&gt;13.47&lt;br&gt;5.55
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
5
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
ST25Q05
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
Never or almost never&lt;br&gt;A few times a year&lt;br&gt;About once a
month&lt;br&gt;Several times a month&lt;br&gt;Several times a week
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
12317&lt;br&gt;12141&lt;br&gt;10314&lt;br&gt;15645&lt;br&gt;15165
&lt;/td&gt;
&lt;td style="padding:0.2cm; text-align:left; vertical-align:top;"&gt;
18.78&lt;br&gt;18.51&lt;br&gt;15.73&lt;br&gt;23.86&lt;br&gt;23.12
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;pre class="r"&gt;&lt;code&gt;plot_likert(d) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file91b5ee1d8ca_files/figure-html/unnamed-chunk-12-1.png" width="672" /&gt;&lt;/p&gt;
&lt;h1 id="plot-model-results"&gt;Plot model results&lt;/h1&gt;
&lt;p&gt;Visualizing data is quite, but let’s get to the really cool
visualization stuff!&lt;/p&gt;
&lt;h2 id="plot-predictions"&gt;Plot predictions&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;plot_model&lt;/code&gt; function is the actual reason I love {sjPlot}
package. &lt;strong&gt;I literally use it everyday!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For example if I want to know how education influences salary, I’ll
plot predictions from a simple linear model. Plotting prediction
immediately tells me the story. Namely, people who did not even finish a
high school, have the lowest salary compared to any other education
level. Moreover, we can see that increasing education level means
increasing salaries. &lt;strong&gt;So, education matters!&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;m &amp;lt;- lm(wage ~ education, data = Wage)
plot_model(m, type = &amp;quot;pred&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;$education&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file91b5ee1d8ca_files/figure-html/unnamed-chunk-13-1.png" width="672" /&gt;&lt;/p&gt;
&lt;h2 id="plot-coefficients"&gt;Plot coefficients&lt;/h2&gt;
&lt;p&gt;The only thing we can’t see from this plot is whether this increase
is significant or not. We could use a well known &lt;code&gt;summary&lt;/code&gt;
table for that, but the output, although useful, is not really pleasing
to the human eye and is not suitable for publication.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;summary(m)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;
Call:
lm(formula = wage ~ education, data = Wage)

Residuals:
    Min      1Q  Median      3Q     Max 
-112.31  -19.94   -3.09   15.33  222.56 

Coefficients:
                            Estimate Std. Error t value Pr(&amp;gt;|t|)    
(Intercept)                   84.104      2.231  37.695  &amp;lt; 2e-16 ***
education2. HS Grad           11.679      2.520   4.634 3.74e-06 ***
education3. Some College      23.651      2.652   8.920  &amp;lt; 2e-16 ***
education4. College Grad      40.323      2.632  15.322  &amp;lt; 2e-16 ***
education5. Advanced Degree   66.813      2.848  23.462  &amp;lt; 2e-16 ***
---
Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1

Residual standard error: 36.53 on 2995 degrees of freedom
Multiple R-squared:  0.2348,    Adjusted R-squared:  0.2338 
F-statistic: 229.8 on 4 and 2995 DF,  p-value: &amp;lt; 2.2e-16&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Luckily for us, &lt;code&gt;plot_model()&lt;/code&gt; with the argument
&lt;code&gt;show.values = TRUE&lt;/code&gt; transforms a boring summary table into
this informative picture, which shows the increase in &lt;em&gt;salary&lt;/em&gt; in
thousands of dollars as compared to no &lt;em&gt;education&lt;/em&gt; (Intercept,
not shown) with 95% confidence intervals and significance stars which
indicate that those increases in &lt;em&gt;salary&lt;/em&gt; are significant.&lt;/p&gt;
&lt;p&gt;(not in the video) Where vertical 0 indicates no effect (x-axis
position 1 for most glm’s and position 0 for most linear models)&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;plot_model(m, show.values = TRUE, width = 0.1)+
  ylab(&amp;quot;Increase in salary as compared to no education&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file91b5ee1d8ca_files/figure-html/unnamed-chunk-15-1.png" width="672" /&gt;&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;ggsave(&amp;quot;plot_model1.jpg&amp;quot;, device = jpeg, plot = last_plot(), width = 5, height = 4)&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="table-with-coeffitients-95-cis-p-values-more"&gt;Table with
coeffitients, 95% CIs, p-values &amp;amp; more&lt;/h2&gt;
&lt;p&gt;However, sometimes we still need to report the summary table, but we
need to make it look better. And that’s where &lt;code&gt;tab_model&lt;/code&gt;
command comes into play. Within &lt;code&gt;tab_model&lt;/code&gt; we can show the
reference level, hide the intercept and change the style of
p-values.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;tab_model(m, 
          show.reflvl = T, 
          show.intercept = F, 
          p.style = &amp;quot;numeric_stars&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;table style="border-collapse:collapse; border:none;"&gt;
&lt;tr&gt;
&lt;th style="border-top: double; text-align:center; font-style:normal; font-weight:bold; padding:0.2cm;  text-align:left; "&gt;
 
&lt;/th&gt;
&lt;th colspan="3" style="border-top: double; text-align:center; font-style:normal; font-weight:bold; padding:0.2cm; "&gt;
wage
&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=" text-align:center; border-bottom:1px solid; font-style:italic; font-weight:normal;  text-align:left; "&gt;
Predictors
&lt;/td&gt;
&lt;td style=" text-align:center; border-bottom:1px solid; font-style:italic; font-weight:normal;  "&gt;
Estimates
&lt;/td&gt;
&lt;td style=" text-align:center; border-bottom:1px solid; font-style:italic; font-weight:normal;  "&gt;
CI
&lt;/td&gt;
&lt;td style=" text-align:center; border-bottom:1px solid; font-style:italic; font-weight:normal;  "&gt;
p
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; "&gt;
&lt;ol style="list-style-type: decimal"&gt;
&lt;li&gt;&amp;lt; HS Grad
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
&lt;em&gt;Reference&lt;/em&gt;
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; "&gt;
&lt;ol start="2" style="list-style-type: decimal"&gt;
&lt;li&gt;HS Grad
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
11.68 &lt;sup&gt;***&lt;/sup&gt;
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
6.74 – 16.62
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
&lt;strong&gt;&amp;lt;0.001&lt;/strong&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; "&gt;
&lt;ol start="3" style="list-style-type: decimal"&gt;
&lt;li&gt;Some College
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
23.65 &lt;sup&gt;***&lt;/sup&gt;
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
18.45 – 28.85
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
&lt;strong&gt;&amp;lt;0.001&lt;/strong&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; "&gt;
&lt;ol start="4" style="list-style-type: decimal"&gt;
&lt;li&gt;College Grad
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
40.32 &lt;sup&gt;***&lt;/sup&gt;
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
35.16 – 45.48
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
&lt;strong&gt;&amp;lt;0.001&lt;/strong&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; "&gt;
&lt;ol start="5" style="list-style-type: decimal"&gt;
&lt;li&gt;Advanced Degree
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
66.81 &lt;sup&gt;***&lt;/sup&gt;
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
61.23 – 72.40
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
&lt;strong&gt;&amp;lt;0.001&lt;/strong&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; padding-top:0.1cm; padding-bottom:0.1cm; border-top:1px solid;"&gt;
Observations
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left; border-top:1px solid;" colspan="3"&gt;
3000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; padding-top:0.1cm; padding-bottom:0.1cm;"&gt;
R&lt;sup&gt;2&lt;/sup&gt; / R&lt;sup&gt;2&lt;/sup&gt; adjusted
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left;" colspan="3"&gt;
0.235 / 0.234
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td colspan="4" style="font-style:italic; border-top:double black; text-align:right;"&gt;
&lt;ul&gt;
&lt;li&gt;p&amp;lt;0.05   ** p&amp;lt;0.01   *** p&amp;lt;0.001
&lt;/td&gt;
&lt;/tr&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/table&gt;
&lt;h2 id="plot-fancy-models"&gt;Plot fancy models 😉💪🤓&lt;/h2&gt;
&lt;p&gt;But the most amazing thing about &lt;code&gt;plot_model&lt;/code&gt; and
&lt;code&gt;tab_model&lt;/code&gt; functions is that they work with almost any type
of model you can imagine! I successfully used it for mixed-effects
models, Bayesian models or negative-binomial models, to name a few. And
the authors of the package constantly improve the functionality, so
that, at the moment you read this blog-post, {sjPlot} package is most
likely improved.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://yuzar-blog.netlify.app//posts/2022-08-01-sjplot/sjPlot.png" /&gt;&lt;/p&gt;
&lt;p&gt;Here is an example of how ease we can visualize a very fancy model,
namely a &lt;strong&gt;generalized linear mixed-effects regression for
negative-binomial distribution of age with 3 way interaction term and a
random effect of education&lt;/strong&gt;.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;m.nb &amp;lt;- glmer.nb(age ~ wage * jobclass * health + (1|education), data = Wage)

plot_model(m.nb, type = &amp;quot;int&amp;quot;)[[4]]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file91b5ee1d8ca_files/figure-html/unnamed-chunk-17-1.png" width="672" /&gt;&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;ggsave(&amp;quot;plot_model2.jpg&amp;quot;, device = jpeg, plot = last_plot(), width = 5, height = 3)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This interactions show that industrial workers with a very good
health earn 50 thousand dollars already at the age of 31, while IT crowd
gets the same salary ca. 8 years later, however at the age of 45 the IT
crowd catches on and even starts to slowly overtake the factory workers,
and finally, while IT folks get to the salary of 300 thousand dollars
already at the age of 50, factory workers might reach this kind of
wealth only at the end of their carrier, at around 63 years old. And the
non-overlapping confidence intervals indicate that such difference in
salaries is significant.&lt;/p&gt;
&lt;p&gt;Besides, you can easily change the appearance of your results by
changing the default order of predictors and even choose particular
values from the numeric predictor. For instance, let’s take three salary
values 50, 150 &amp;amp; 300 as we just talked about them and display our
results in a different way.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;plot_model(m.nb, type = &amp;quot;pred&amp;quot;, terms = c(&amp;quot;health&amp;quot;, &amp;quot;jobclass&amp;quot;, &amp;quot;wage [50, 150, 300]&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file91b5ee1d8ca_files/figure-html/unnamed-chunk-18-1.png" width="1056" /&gt;&lt;/p&gt;
&lt;p&gt;Moreover, &lt;code&gt;type&lt;/code&gt; argument allows to create various plot
types. For example, we can easily visualize random effects if we want
to.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;plot_model(m.nb, 
           type  = &amp;quot;re&amp;quot;, 
           width = .5, 
           show.values = T) + ylim(0.9,1.1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file91b5ee1d8ca_files/figure-html/unnamed-chunk-19-1.png" width="672" /&gt;&lt;/p&gt;
&lt;h2 id="plot-multiple-models"&gt;Plot multiple models&lt;/h2&gt;
&lt;p&gt;It only gets better from now. If we want to explore several dependent
variables with the same predictors, we can use &lt;code&gt;plot_models&lt;/code&gt;
function to plot several models at once. In the first code example we’ll
use already familiar argument - &lt;code&gt;show.values&lt;/code&gt; - and a new one
- &lt;code&gt;grid&lt;/code&gt; - which plots models in separate fields to avoid
congestion and overload of information on the picture.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;# fit two models
fit1 &amp;lt;- lm(age ~ education + jobclass + health_ins, data = Wage)
fit2 &amp;lt;- lm(wage ~ education + jobclass + health_ins, data = Wage)

# plot multiple models
plot_models(fit1, fit2, show.values = T, grid = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file91b5ee1d8ca_files/figure-html/unnamed-chunk-20-1.png" width="672" /&gt;&lt;/p&gt;
&lt;p&gt;In the second example we avoid clutter by simply not using
&lt;code&gt;show.values&lt;/code&gt;, since we can kind of read them from the
x-axes, and we’ll use &lt;code&gt;p.shape = TRUE&lt;/code&gt; argument instead, in
order to display p-values as shapes instead of significance stars.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;plot_models(fit1, fit2, p.shape = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src="file91b5ee1d8ca_files/figure-html/unnamed-chunk-21-1.png" width="672" /&gt;&lt;/p&gt;
&lt;h2 id="more-than-one-model"&gt;More than one model&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;tab_model&lt;/code&gt; can also easily display multiple models. Here,
&lt;code&gt;collapse.ci = TRUE&lt;/code&gt; argument conveniently puts confidence
intervals below the estimates, so that we can report several models near
each other.&lt;/p&gt;
&lt;pre class="r"&gt;&lt;code&gt;tab_model(fit1, fit2, 
          collapse.ci = TRUE, 
          p.style     = &amp;quot;numeric_stars&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;table style="border-collapse:collapse; border:none;"&gt;
&lt;tr&gt;
&lt;th style="border-top: double; text-align:center; font-style:normal; font-weight:bold; padding:0.2cm;  text-align:left; "&gt;
 
&lt;/th&gt;
&lt;th colspan="2" style="border-top: double; text-align:center; font-style:normal; font-weight:bold; padding:0.2cm; "&gt;
age
&lt;/th&gt;
&lt;th colspan="2" style="border-top: double; text-align:center; font-style:normal; font-weight:bold; padding:0.2cm; "&gt;
wage
&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=" text-align:center; border-bottom:1px solid; font-style:italic; font-weight:normal;  text-align:left; "&gt;
Predictors
&lt;/td&gt;
&lt;td style=" text-align:center; border-bottom:1px solid; font-style:italic; font-weight:normal;  "&gt;
Estimates
&lt;/td&gt;
&lt;td style=" text-align:center; border-bottom:1px solid; font-style:italic; font-weight:normal;  "&gt;
p
&lt;/td&gt;
&lt;td style=" text-align:center; border-bottom:1px solid; font-style:italic; font-weight:normal;  "&gt;
Estimates
&lt;/td&gt;
&lt;td style=" text-align:center; border-bottom:1px solid; font-style:italic; font-weight:normal;  "&gt;
p
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; "&gt;
(Intercept)
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
43.15 &lt;sup&gt;***&lt;/sup&gt;&lt;br&gt;(41.68 – 44.63)
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
&lt;strong&gt;&amp;lt;0.001&lt;/strong&gt;
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
93.72 &lt;sup&gt;***&lt;/sup&gt;&lt;br&gt;(89.14 – 98.31)
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
&lt;strong&gt;&amp;lt;0.001&lt;/strong&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; "&gt;
education [2. HS Grad]
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
-0.21 &lt;sup&gt;&lt;/sup&gt;&lt;br&gt;(-1.75 – 1.34)
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
0.794
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
8.15 &lt;sup&gt;***&lt;/sup&gt;&lt;br&gt;(3.34 – 12.95)
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
&lt;strong&gt;0.001&lt;/strong&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; "&gt;
education [3. Some&lt;br&gt;College]
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
-2.01 &lt;sup&gt;*&lt;/sup&gt;&lt;br&gt;(-3.65 – -0.37)
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
&lt;strong&gt;0.016&lt;/strong&gt;
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
17.89 &lt;sup&gt;***&lt;/sup&gt;&lt;br&gt;(12.79 – 22.99)
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
&lt;strong&gt;&amp;lt;0.001&lt;/strong&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; "&gt;
education [4. College&lt;br&gt;Grad]
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
-0.48 &lt;sup&gt;&lt;/sup&gt;&lt;br&gt;(-2.13 – 1.17)
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
0.568
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
33.03 &lt;sup&gt;***&lt;/sup&gt;&lt;br&gt;(27.91 – 38.15)
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
&lt;strong&gt;&amp;lt;0.001&lt;/strong&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; "&gt;
education [5. Advanced&lt;br&gt;Degree]
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
1.35 &lt;sup&gt;&lt;/sup&gt;&lt;br&gt;(-0.45 – 3.16)
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
0.142
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
57.90 &lt;sup&gt;***&lt;/sup&gt;&lt;br&gt;(52.28 – 63.52)
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
&lt;strong&gt;&amp;lt;0.001&lt;/strong&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; "&gt;
jobclass [2. Information]
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
1.42 &lt;sup&gt;**&lt;/sup&gt;&lt;br&gt;(0.56 – 2.28)
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
&lt;strong&gt;0.001&lt;/strong&gt;
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
3.67 &lt;sup&gt;**&lt;/sup&gt;&lt;br&gt;(1.00 – 6.35)
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
&lt;strong&gt;0.007&lt;/strong&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; "&gt;
health ins [2. No]
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
-3.29 &lt;sup&gt;***&lt;/sup&gt;&lt;br&gt;(-4.20 – -2.39)
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
&lt;strong&gt;&amp;lt;0.001&lt;/strong&gt;
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
-19.89 &lt;sup&gt;***&lt;/sup&gt;&lt;br&gt;(-22.72 – -17.07)
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:center;  "&gt;
&lt;strong&gt;&amp;lt;0.001&lt;/strong&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; padding-top:0.1cm; padding-bottom:0.1cm; border-top:1px solid;"&gt;
Observations
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left; border-top:1px solid;" colspan="2"&gt;
3000
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left; border-top:1px solid;" colspan="2"&gt;
3000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; text-align:left; padding-top:0.1cm; padding-bottom:0.1cm;"&gt;
R&lt;sup&gt;2&lt;/sup&gt; / R&lt;sup&gt;2&lt;/sup&gt; adjusted
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left;" colspan="2"&gt;
0.033 / 0.031
&lt;/td&gt;
&lt;td style=" padding:0.2cm; text-align:left; vertical-align:top; padding-top:0.1cm; padding-bottom:0.1cm; text-align:left;" colspan="2"&gt;
0.284 / 0.283
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td colspan="5" style="font-style:italic; border-top:double black; text-align:right;"&gt;
&lt;ul&gt;
&lt;li&gt;p&amp;lt;0.05   ** p&amp;lt;0.01   *** p&amp;lt;0.001
&lt;/td&gt;
&lt;/tr&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/table&gt;
&lt;h1 id="whats-next"&gt;What’s next&lt;/h1&gt;
&lt;p&gt;By the way, if you want to visualize and test &lt;strong&gt;ALL the
assumptions of ANY model with a SINGLE function&lt;/strong&gt;, check out this
video about another amazing package created by the same author - &lt;a
href="https://github.com/strengejacke"&gt;Daniel Lüdecke&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="further-readings-and-references"&gt;Further readings and
references&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://strengejacke.github.io/sjPlot/"
class="uri"&gt;https://strengejacke.github.io/sjPlot/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a
href="https://cran.r-project.org/web/packages/sjPlot/index.html"
class="uri"&gt;https://cran.r-project.org/web/packages/sjPlot/index.html&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;If you think, I missed something, please comment on it, and I’ll
improve this tutorial.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Thank you for learning!&lt;/strong&gt;&lt;/p&gt;
&lt;pre class="r distill-force-highlighting-css"&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;</description>
      <distill:md5>084e31b0d01e136a5b84f497228763ce</distill:md5>
      <category>videos</category>
      <category>statistics</category>
      <category>R package reviews</category>
      <category>visualization</category>
      <category>models</category>
      <guid>https://yuzar-blog.netlify.app/posts/2022-08-01-sjplot</guid>
      <pubDate>2023-08-14</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2022-08-01-sjplot/thumbnail_sjPlot.png" medium="image" type="image/png" width="1920" height="1080"/>
    </item>
    <item>
      <title>{dplyr} on Steroids: Handling Data Bases</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2023-05-09-datawrangling4</link>
      <description>If you know how to tidy up data within one table, you're already a skilled data scientist! However, as data continues to grow exponentially, taking your skills to the next level involves mastering the art of working with multiple tables within a database, typically done using SQL. In this post, we'll learn three essential techniques using {dplyr} that will allow you to handle databases with ease: merging multiple tables, reducing redundancy through table joins, and effortlessly modifying values within the resulting table.</description>
      <category>videos</category>
      <category>statistics</category>
      <category>data wrangling</category>
      <category>R package reviews</category>
      <guid>https://yuzar-blog.netlify.app/posts/2023-05-09-datawrangling4</guid>
      <pubDate>2023-07-14</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2023-05-09-datawrangling4/dplyr_4_thumbnail.png" medium="image" type="image/png" width="1920" height="1080"/>
    </item>
    <item>
      <title>Quantile Regression as an useful Alternative for Ordinary Linear Regression</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2022-12-01-quantileregression</link>
      <description>Ordinary linear regression often fails to correctly describe skewed or heteroscedastic data, totally srews up if data has outliers, and describes only the mean of the response variable. Quantile Regression promises to solve all these problems and delivers more results.</description>
      <category>videos</category>
      <category>statistics</category>
      <category>models</category>
      <guid>https://yuzar-blog.netlify.app/posts/2022-12-01-quantileregression</guid>
      <pubDate>2023-07-07</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2022-12-01-quantileregression/thumbnail_quantile_regression.png" medium="image" type="image/png" width="1920" height="1080"/>
    </item>
    <item>
      <title>Transform Your Data Like a Pro with {tidyr} and Say Goodbye to Messy Data!</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2023-04-18-datawrangling3</link>
      <description>Every data scientist dreams of creating beautiful visualizations, conducting complex modeling, and diving into machine learning methods. However, most of the time, messy data hinders our ability to do really cool stuff. Thus, tidying up the data is the key to unlocking your full potential. Unfortunately, reshaping data in Excel can be a tedious and error-prone task. Do you remember the time when you needed to quickly transform columns to rows or rows to columns, split or combine columns, or handle missing values? With the {tidyr} package, you'll be able to transform your data quickly, accurately, and efficiently, preparing yourself for the stuff that really matters ;)</description>
      <category>videos</category>
      <category>statistics</category>
      <category>data wrangling</category>
      <category>R package reviews</category>
      <guid>https://yuzar-blog.netlify.app/posts/2023-04-18-datawrangling3</guid>
      <pubDate>2023-05-09</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2023-04-18-datawrangling3/dplyr_3_thumbnail.png" medium="image" type="image/png" width="1920" height="1080"/>
    </item>
    <item>
      <title>Advanced {dplyr}: 50+ Data Wrangling Techniques!</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2023-02-07-datawrangling2</link>
      <description>Have you ever been frustrated with messy data that seems impossible to analyze? Or have you ever spend hours cleaning and transforming data before you could even start producing results? Well, no worries! In this blog-post, I'll show you &gt;50 Data Wrangling techniques, which will allow you to solve the most of your daily data manipulation challenges like a pro.</description>
      <category>videos</category>
      <category>statistics</category>
      <category>data wrangling</category>
      <guid>https://yuzar-blog.netlify.app/posts/2023-02-07-datawrangling2</guid>
      <pubDate>2023-04-23</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2023-02-07-datawrangling2/dplyr_2_thumbnail.png" medium="image" type="image/png" width="1920" height="1080"/>
    </item>
    <item>
      <title>Top 10 Must-Know {dplyr} Commands for Data Wrangling in R!</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2023-01-31-datawrangling1</link>
      <description>The {dplyr} is one of the most useful R packages outthere. For me R is {dplyr} and {tidyverse}. So, here we'll use the most frequently used command.</description>
      <category>videos</category>
      <category>statistics</category>
      <category>data wrangling</category>
      <guid>https://yuzar-blog.netlify.app/posts/2023-01-31-datawrangling1</guid>
      <pubDate>2023-02-05</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2023-01-31-datawrangling1/dplyr_1_thumbnail.png" medium="image" type="image/png" width="1920" height="1080"/>
    </item>
    <item>
      <title>{emmeans} Game-Changing R-package Squeezes Hidden Knowledge out of Models!</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2022-11-29-emmeans</link>
      <description>{emmeans} is one of the most capable, but at the same time one of the most mysterious and therefore underrated R packages. Let's demistify {emmeans} and uncover it's power!</description>
      <category>videos</category>
      <category>statistics</category>
      <category>models</category>
      <guid>https://yuzar-blog.netlify.app/posts/2022-11-29-emmeans</guid>
      <pubDate>2023-01-31</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2022-11-29-emmeans/thumbnail_emmeans_1.png" medium="image" type="image/png" width="1920" height="1080"/>
    </item>
    <item>
      <title>Don't Ignore Interactions - Unleash the Full Power of Models with {emmeans} R-package</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2022-12-29-emmeans2interactions</link>
      <description>Analysing interactions is both (1) very challenging, that's why it's rarely executed, and (2) very rewording if done well, that's why it's still sometimes attempted. {emmeans} is one of the few packages which demistify interactions and extract the most knowledge out of statistical models!</description>
      <category>videos</category>
      <category>statistics</category>
      <category>models</category>
      <guid>https://yuzar-blog.netlify.app/posts/2022-12-29-emmeans2interactions</guid>
      <pubDate>2023-01-31</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2022-12-29-emmeans2interactions/thumbnail_emmeans_2.png" medium="image" type="image/png" width="1920" height="1080"/>
    </item>
    <item>
      <title>R package reviews {gtsummary} Publication-Ready Tables of Data, Stat-Tests and Models!</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2022-10-31-gtsummary</link>
      <description>{gtsummary} package helps to easily produce publication-ready &amp; beautifully formatted summary tables of Data, Statistical Tests and Models! It calculates tons of statistics and has a beautiful design by default, but you can customize every aspect of your table and export it as a picture or MS Word format.</description>
      <category>videos</category>
      <category>statistics</category>
      <category>models</category>
      <category>machine learning</category>
      <guid>https://yuzar-blog.netlify.app/posts/2022-10-31-gtsummary</guid>
      <pubDate>2022-11-29</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2022-10-31-gtsummary/thumbnail_gtsummary.png" medium="image" type="image/png" width="1920" height="1080"/>
    </item>
    <item>
      <title>Publication-Ready Tables of Particular Statistical Tests and Models with {gtsummary}</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2022-11-25-gtsummary2</link>
      <description>Find a review of incredibly useful {gtsummary} package in a separate blog-post. Here I'll just collect all the possible Statsitcal Tests and Models, {gtsummary} can help with.</description>
      <category>videos</category>
      <category>statistics</category>
      <category>models</category>
      <category>machine learning</category>
      <guid>https://yuzar-blog.netlify.app/posts/2022-11-25-gtsummary2</guid>
      <pubDate>2022-11-29</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2022-11-25-gtsummary2/thumbnail_gtsummary2.png" medium="image" type="image/png" width="1920" height="1080"/>
    </item>
    <item>
      <title>R package reviews {rsample} Effective Resampling for Machine Learning!</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2022-10-27-rsample</link>
      <description>Let's learn how to use three most important resampling techniques: train-test split, cross-validation and bootstrapping. We'll start with the question...</description>
      <category>videos</category>
      <category>statistics</category>
      <category>models</category>
      <category>machine learning</category>
      <category>tidymodels</category>
      <category>R package reviews</category>
      <guid>https://yuzar-blog.netlify.app/posts/2022-10-27-rsample</guid>
      <pubDate>2022-11-06</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2022-10-27-rsample/thumbnail_rsample.png" medium="image" type="image/png" width="1920" height="1080"/>
    </item>
    <item>
      <title>4 Reasons Non-Parametric Bootstrapped Regression (with tidymodels) is Better thаn Ordinary Regression</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2022-08-31-bootstrappingregressions</link>
      <description>If the assumptions of parametric models can be satisfied, parametric models are the way to go. However, there are often many assumptions and to satisfy them all is rarely possible. Data transformation or using non-parametric methods are two solutions for that. In this post we'll learn the Non-Parametric Bootstrapped Regression as an alternative for the Ordinary Linear Regression in case when assumptions are violated.</description>
      <category>videos</category>
      <category>statistics</category>
      <category>visualization</category>
      <category>models</category>
      <guid>https://yuzar-blog.netlify.app/posts/2022-08-31-bootstrappingregressions</guid>
      <pubDate>2022-10-07</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2022-08-31-bootstrappingregressions/thumbnail_bootstrapped_regression.png" medium="image" type="image/png" width="1920" height="1080"/>
    </item>
    <item>
      <title>R demo | Repeated Measures ANOVA (One-Way) | How to Conduct, Visualise and Interpret</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2022-01-30-rmanova</link>
      <description>Can sport increase our selfesteem? Well, one experiment measured self-esteem of 10 people on three different time points and used Repeated Measures ANOVA to answer this question. So, let's learn how to produce this statistically rich plot using only one simple command and how to interpret all these results.</description>
      <category>videos</category>
      <category>statistics</category>
      <guid>https://yuzar-blog.netlify.app/posts/2022-01-30-rmanova</guid>
      <pubDate>2022-10-05</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2022-01-30-rmanova/thumbnail.png" medium="image" type="image/png" width="1920" height="1080"/>
    </item>
    <item>
      <title>R demo| Many Models with Nested (Grouped) Data Easily</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2022-09-12-manymodels</link>
      <description>In this blog-post, we'll learn how to produce grouped / nested models, with an amazing "map()" function from {purrr} package in R. We'll use linear models in this example for the sake of simplicity, but you can apply any model you want (robust, logistic, poisson etc.). We'll see, how to effectively store and use the information from multiple models. And while in this blog-post we'll produce "only" 10 models, you can produce any number of models you want.</description>
      <category>videos</category>
      <category>statistics</category>
      <category>visualization</category>
      <category>models</category>
      <guid>https://yuzar-blog.netlify.app/posts/2022-09-12-manymodels</guid>
      <pubDate>2022-09-22</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2022-09-12-manymodels/thumbnail_many_models.png" medium="image" type="image/png" width="1920" height="1080"/>
    </item>
    <item>
      <title>R demo | Robust Regression (don't depend on influential data!)</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2022-09-02-robustregression</link>
      <description>Linear regression can be very sensitive to unusual data, like outliers, high leverage observations or a combination of both. A robust regression suppose to provide a solution for that. So, let's build both an ordinary and a robust regressions, compare them to find out whether outliers are a serious problem and see whether robust model performs better then usual linear model.</description>
      <category>videos</category>
      <category>statistics</category>
      <category>visualization</category>
      <category>models</category>
      <guid>https://yuzar-blog.netlify.app/posts/2022-09-02-robustregression</guid>
      <pubDate>2022-09-11</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2022-09-02-robustregression/thumbnail_robust.png" medium="image" type="image/png" width="1920" height="1080"/>
    </item>
    <item>
      <title>R package reviews {report} How To Report Statistical Results!</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2022-06-18-report</link>
      <description>If you ever wandered how to correctly describe the results of statistical tests and models, this blog is for you. In a few minutes you'll learn how to report the results of correlations, t-tests, Generalised Linear Models, Mixed-Effects models, Bayesian Models and even more 😉 So, let's start with a simple t-test.</description>
      <category>videos</category>
      <category>statistics</category>
      <category>R package reviews</category>
      <category>models</category>
      <guid>https://yuzar-blog.netlify.app/posts/2022-06-18-report</guid>
      <pubDate>2022-07-11</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2022-06-18-report/thumbnail_report.png" medium="image" type="image/png" width="1920" height="1080"/>
    </item>
    <item>
      <title>R package reviews {glmulti} find the best model!</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2022-05-31-glmulti</link>
      <description>“All models are wrong, some are useful” - said a statistician George Box. And he was right. Thus, in this post we'll find the set of very useful models from the set of all possible models and will be able to choose THE MOST USEFUL model which adressed all our questions.</description>
      <category>videos</category>
      <category>statistics</category>
      <category>machine learning</category>
      <category>R package reviews</category>
      <category>models</category>
      <guid>https://yuzar-blog.netlify.app/posts/2022-05-31-glmulti</guid>
      <pubDate>2022-06-09</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2022-05-31-glmulti/thumbnail_glmulti.png" medium="image" type="image/png" width="1920" height="1080"/>
    </item>
    <item>
      <title>Tidy Data and Why We Need It!</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2022-04-22-tidydata</link>
      <description>Tidy data are easy to manipulate, visualise and analyse, while messy data always interrupts the analysis and invates mistakes. So, tidying up data before analysis pays off a great deal in the long term. In this post you'll learn how do we tidy up data.</description>
      <category>videos</category>
      <category>statistics</category>
      <guid>https://yuzar-blog.netlify.app/posts/2022-04-22-tidydata</guid>
      <pubDate>2022-05-23</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2022-04-22-tidydata/tidydata_2.jpeg" medium="image" type="image/jpeg"/>
    </item>
    <item>
      <title>R demo | ANOVA (One-Way ) | Fisher's, Welch's, Bayesian, Robust</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2022-04-03-anova</link>
      <description>How does education influence our salary? ANOVA which is just the abbreviation for Analysis Of Variances you see on the thumbnail answeres this question with Frequentists and Bayesian tests. It also privides two different effect sizes, compares education levels pairwisely and even corrects p-values for multiple comparisons. ALL OF THAT is done by this simple command. So, in this blog-post you'll learn how to produce the statistically rich plot, you'll understand when to conduct Welch's ANOVA and when Fisher's ANOVA and you'll know how to interpret every little detail on this plot. Lets get into it.</description>
      <category>videos</category>
      <category>statistics</category>
      <guid>https://yuzar-blog.netlify.app/posts/2022-04-03-anova</guid>
      <pubDate>2022-05-16</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2022-04-03-anova/thumbnail.png" medium="image" type="image/png" width="1920" height="1080"/>
    </item>
    <item>
      <title>R demo | Kruskal-Wallis test | How to conduct, visualize, interpret &amp; more 😉</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2022-04-13-kw</link>
      <description>If we have ordinal or not-normally distributed data, ANOVA might produce a wrong result. That's why we need Kruskal-Wallis test. Kruskal-Wallis test you see on the screen answers two question (1) whether at least one group is different from other groups and (2) between which groups exactly this difference is. So, let's learn how to get and interpret all these results.</description>
      <category>videos</category>
      <category>statistics</category>
      <guid>https://yuzar-blog.netlify.app/posts/2022-04-13-kw</guid>
      <pubDate>2022-05-16</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2022-04-13-kw/thumbnail.png" medium="image" type="image/png" width="1920" height="1080"/>
    </item>
    <item>
      <title>R demo | Cochran’s Q Test + Pairwise McNemar Tests (post-hoc)</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2022-03-04-cochran</link>
      <description>Cochran test is an extension of the McNemar test for comparing MORE than two PAIRED categorical samples in which the same individuals appear in each sample. If Cochran test is significant, we'd need to compare samples among each other pairwisely with McNemar tests. So, let's do that.</description>
      <category>videos</category>
      <category>statistics</category>
      <guid>https://yuzar-blog.netlify.app/posts/2022-03-04-cochran</guid>
      <pubDate>2022-04-20</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2022-03-04-cochran/thumbnail.png" medium="image" type="image/png" width="1920" height="1080"/>
    </item>
    <item>
      <title>R demo | Mann-Whitney U Test = Wilcoxon Rank Sum Test | How to conduct, visualise &amp; interpret 🥳 What happens if we use a wrong test 😱</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2022-03-16-mwutest</link>
      <description>Comparing two groups with not-normally disctributed or ordinal data is the reason we need Mann-Whitney U Test instead of t-Test. So, today we'll learn (1) how to conduct and visualize Mann-Whitney U Test you saw on the thumbnail with one simple command, (2) how to interpret all statistical results on that plot and (3) why this test is sometimes called Wilcoxon Rank Sum Test and why we shouldn't use this name</description>
      <category>videos</category>
      <category>statistics</category>
      <guid>https://yuzar-blog.netlify.app/posts/2022-03-16-mwutest</guid>
      <pubDate>2022-04-16</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2022-03-16-mwutest/thumbnail.png" medium="image" type="image/png" width="1920" height="1080"/>
    </item>
    <item>
      <title>R demo | Correlation Matrix | Danger or opportunity?</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2022-01-05-correlationmatrixinr</link>
      <description>Having several numeric variables, we often wanna know which of them are correlated and how. Correlation Matrix seems to be a good solution for it. But drawing conclusions from plain correlation coeffitients and p-values is dangerous, if we don't visualize the data. Let's learn a better way to produce a correlation matrix.</description>
      <category>videos</category>
      <category>statistics</category>
      <guid>https://yuzar-blog.netlify.app/posts/2022-01-05-correlationmatrixinr</guid>
      <pubDate>2022-04-01</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2022-01-05-correlationmatrixinr/thumbnail.jpg" medium="image" type="image/jpeg"/>
    </item>
    <item>
      <title>R demo | Two-Samples t-Test | Student's &amp; Welch's | How to conduct, visualise, interpret | What happens if we use a wrong test 😱</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2022-03-11-ttest</link>
      <description>Two-samples t-test can answer useful questions, for example - where can we get more money, working in a factory or in the IT-industry? So, let's learn (1) how to make sure t-test is a CORRECT test for our data, (2) how to get all these results with one simple command, (3) how to interpret all these results and (4) finally see what happens if we choose a wrong test.</description>
      <category>videos</category>
      <category>statistics</category>
      <guid>https://yuzar-blog.netlify.app/posts/2022-03-11-ttest</guid>
      <pubDate>2022-03-22</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2022-03-11-ttest/thumbnail.png" medium="image" type="image/png" width="1920" height="1080"/>
    </item>
    <item>
      <title>R demo | Paired Samples t-Test | How to conduct, visualise and interpret</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2022-01-22-pairedsamplesttestinr</link>
      <description>Can one week of training significantly improve your number of sit-ups? Well, Paired t-Test can answer this question by comparing your performance Before and After this week. So, let's learn how to produce this statistically rich plot using only one simple command, how to interpret all these results and see what happens if we use a wrong test.</description>
      <category>videos</category>
      <category>statistics</category>
      <guid>https://yuzar-blog.netlify.app/posts/2022-01-22-pairedsamplesttestinr</guid>
      <pubDate>2022-03-11</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2022-01-22-pairedsamplesttestinr/thumbnail.png" medium="image" type="image/png" width="1920" height="1080"/>
    </item>
    <item>
      <title>R demo | McNemar Test | How to Conduct, Visualise and Interpret</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2022-02-20-mcnemar</link>
      <description>If you need to compare two PAIRED categorical samples, McNemar test is a correct choise for you. Though, people often use Chi-Square test instead. Thus, in this blog-post we'll first conduct, visualize and interpret McNemac test you see on the picture to your right using only one simple command and then see what happens if we use Chi-Square test for paired data.</description>
      <category>videos</category>
      <category>statistics</category>
      <guid>https://yuzar-blog.netlify.app/posts/2022-02-20-mcnemar</guid>
      <pubDate>2022-03-05</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2022-02-20-mcnemar/thumbnail.png" medium="image" type="image/png" width="1920" height="1080"/>
    </item>
    <item>
      <title>R demo | Friedman Test | How to Conduct, Visualise and Interpret</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2022-02-08-friedman</link>
      <description>The Friedman Test is a non-parametric brother of Repeated Measures ANOVA, which does much better job when data is not-normally distributed (which happens pretty often ;). Friedman test is also superior to Repeated Measures ANOVA when our data is ordinal (e.g., scales from 1 to 10). Friedman Test can also be a non-parametric father of the Paired Wilcoxon test, because it can compare more then two groups.</description>
      <category>videos</category>
      <category>statistics</category>
      <guid>https://yuzar-blog.netlify.app/posts/2022-02-08-friedman</guid>
      <pubDate>2022-02-20</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2022-02-08-friedman/thumbnail.png" medium="image" type="image/png" width="1920" height="1080"/>
    </item>
    <item>
      <title>R demo | Paired Samples Wilcoxon Signed Rank Test</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2022-01-13-pairedsampleswilcoxonsigned-ranktestinr</link>
      <description>Can a speed-reading exercise make you a faster reader? Well, Wilcoxon Signed Rank Test displayed here is a correct test to answer this question. So, in this video we'll learn how to choose a correct test and what happens if we use a wrong test, why Wilcoxon test is called Signed Rank and how to produce and interpret this statistically rich plot using only one simple command.</description>
      <category>videos</category>
      <category>statistics</category>
      <guid>https://yuzar-blog.netlify.app/posts/2022-01-13-pairedsampleswilcoxonsigned-ranktestinr</guid>
      <pubDate>2022-01-26</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2022-01-13-pairedsampleswilcoxonsigned-ranktestinr/thumbnail.png" medium="image" type="image/png" width="1920" height="1080"/>
    </item>
    <item>
      <title>Correlation Analysis in R | Pearson, Spearman, Robust, Bayesian | How to conduct, visualise and interpret</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2021-12-29-correlationinr</link>
      <description>Having two numeric variables, we often wanna know whether they are correlated and how. One simple command {ggscatterstats} can answer both questions by visualizing the data and conducting frequentists and bayesian correlation analysis at the same time. So, let's learn how to do that, how to interpret all those results and how to choose the right correlation method in the first place.</description>
      <category>videos</category>
      <category>statistics</category>
      <guid>https://yuzar-blog.netlify.app/posts/2021-12-29-correlationinr</guid>
      <pubDate>2022-01-03</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2021-12-29-correlationinr/thumbnail.jpg" medium="image" type="image/jpeg"/>
    </item>
    <item>
      <title>One-sample Student’s t-test and One-sample Wilcoxon test: or how to compare your work to the work of others.</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2021-12-20-one-sample-t-test-do-your-results-make-sense-or-how-to-compare-your-work-to-the-work-of-others</link>
      <description>Imagine you get 7 out of 10 to-dos from your list done on average. Are you then more productive then others? One-sample t-test and One-sample Wilcoxon test can answer this question. So, in this blog-post you'll learn how to conduct and visualize these tests with only one simple command, how to interpret all these results and how to choose the right test in the first place. Let's get straight into it.</description>
      <category>videos</category>
      <category>statistics</category>
      <guid>https://yuzar-blog.netlify.app/posts/2021-12-20-one-sample-t-test-do-your-results-make-sense-or-how-to-compare-your-work-to-the-work-of-others</guid>
      <pubDate>2021-12-27</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2021-12-20-one-sample-t-test-do-your-results-make-sense-or-how-to-compare-your-work-to-the-work-of-others/thumbnail.jpg" medium="image" type="image/jpeg"/>
    </item>
    <item>
      <title>R demo | Chi-Square Test | how to conduct, visualize &amp; interpret | + pairwise post-hoc tests</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2021-12-14-how-to-conduct-chi-square-test-in-r</link>
      <description>Chi-Square Test checks the independence between two categorical variables, where variables can have two or more categories. Need to do Chi-Square test? It can actually be done with only one line of code. There is no better way than {ggbarstats} function from {ggstatsplot} package 📦. In this short blog-post you'll learn how to conduct, visualize and interpret Chi-Square test &amp; pairwise post-hoc tests in R.</description>
      <category>videos</category>
      <category>statistics</category>
      <guid>https://yuzar-blog.netlify.app/posts/2021-12-14-how-to-conduct-chi-square-test-in-r</guid>
      <pubDate>2021-12-20</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2021-12-14-how-to-conduct-chi-square-test-in-r/thumbnail.jpg" medium="image" type="image/jpeg"/>
    </item>
    <item>
      <title>R package reviews {dlookr} diagnose, explore and transform your data</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2021-01-30-r-package-reviews-dlookr-diagnose-explore-and-transform-your-data</link>
      <description>Raw data need to be diagnosed for existing problems, explored for new hypotheses and repaired in order to increase data quality and output. The {dlookr} package makes these steps fast and easy. {dlookr} generates automated reports and performs compex operations, like imputing missing values or outliers, with simple functions. Moreover, {dlookr} collaborates perfectly with {tidyverse} packages, like {dplyr} and {ggplot2} to name just a few!</description>
      <category>EDA</category>
      <category>videos</category>
      <category>data wrangling</category>
      <category>R package reviews</category>
      <category>visualization</category>
      <guid>https://yuzar-blog.netlify.app/posts/2021-01-30-r-package-reviews-dlookr-diagnose-explore-and-transform-your-data</guid>
      <pubDate>2021-01-30</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2021-01-30-r-package-reviews-dlookr-diagnose-explore-and-transform-your-data/dlookr_thumbnail.png" medium="image" type="image/png" width="1920" height="1080"/>
    </item>
    <item>
      <title>Deep Exploratory Data Analysis (EDA) in R</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2021-01-09-exploratory-data-analysis-and-beyond-in-r-in-progress</link>
      <description>Exploratory Data Analysis is an important first step on the long way to the final result, be it a statistical inference in a scientific paper or a machine learning algorithm in production. This long way is often bumpy, highly iterative and time consuming. However, EDA might be the most important part of data analysis, because it helps to generate hypothesis, which then determine THE final RESULT. Thus, in this post I'll provide the simplest and most effective ways to explore data in R, which will significantly speed up your work. Moreover, we'll go one step beyond EDA by starting to test our hypotheses with simple statistical tests.</description>
      <category>EDA</category>
      <category>videos</category>
      <category>data wrangling</category>
      <category>visualization</category>
      <guid>https://yuzar-blog.netlify.app/posts/2021-01-09-exploratory-data-analysis-and-beyond-in-r-in-progress</guid>
      <pubDate>2021-01-09</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2021-01-09-exploratory-data-analysis-and-beyond-in-r-in-progress/DEDA_thumbnail.jpg" medium="image" type="image/jpeg"/>
    </item>
    <item>
      <title>How to impute missing values with Machine Learning in R</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2021-03-04-how-to-impute-missing-values-in-r</link>
      <description>Imputation simply means - replacing a missing value with a value that makes sense. But how can we get such values? Well, we'll use Machine Learning algorithms, because they have a high prediction power. So, in this post we'll learn how to impute missing values easily and effectively.</description>
      <category>videos</category>
      <category>data wrangling</category>
      <category>visualization</category>
      <category>machine learning</category>
      <guid>https://yuzar-blog.netlify.app/posts/2021-03-04-how-to-impute-missing-values-in-r</guid>
      <pubDate>2021-01-09</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2021-03-04-how-to-impute-missing-values-in-r/thumbnail_missing_values.png" medium="image" type="image/png" width="1920" height="1080"/>
    </item>
    <item>
      <title>Null Hypothesis, Alternative Hypothesis and Hypothesis Testing</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2021-06-04-my-second-blog-postthis-one-will-be-really-good</link>
      <description>Hypothesis testing is one of the most important concepts in (frequentiest) statistics and science. However, most people who test hypotheses are scientists, but not statisticians. That's why scientists often do not test hypotheses properly, without any bad intensionс. So, in this blog-post we'll break down hypothesis testing in small parts and try to properly understand every of them.</description>
      <category>videos</category>
      <category>statistics</category>
      <guid>https://yuzar-blog.netlify.app/posts/2021-06-04-my-second-blog-postthis-one-will-be-really-good</guid>
      <pubDate>2021-01-09</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2021-06-04-my-second-blog-postthis-one-will-be-really-good/thumbnail.jpg" medium="image" type="image/jpeg"/>
    </item>
    <item>
      <title>What is p-value and why we need it</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2021-07-31-p-value-intuitive-explanation</link>
      <description>Why do we need p-values? Well, they help to **make decisions** and **answer the question whether we found something new or not**. But despite the fact that **p-values are** actually **useful**, they are **far from perfect**! And while everyone uses p-values, understanding them (and using them correctly) is very hard. The definition of the p-value from the book is often correct but rarely intuitive. Intuitive explanations are often not entirely correct. So, in this blog-post (and video) we’ll start with an intuitive (and not entirely correct) definition and will gradually build up the understanding of the p-value step by step. Thus, I don’t recommend to skip any part of this blog (or video). We’ll also talk about how to use and interpret p-values correctly in order to **make better decisions and better science**.</description>
      <category>videos</category>
      <category>statistics</category>
      <guid>https://yuzar-blog.netlify.app/posts/2021-07-31-p-value-intuitive-explanation</guid>
      <pubDate>2021-01-09</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2021-07-31-p-value-intuitive-explanation/thumbnail.jpg" medium="image" type="image/jpeg"/>
    </item>
    <item>
      <title>R package reviews {DataExplorer} explore your data!</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2021-01-06-r-package-reviews-dataexplorer-explore-your-data</link>
      <description>What is the best way to explore the data quick? I think it's visualization. And what it the best way to visualize the data quick? I think it's - {DataExplorer} package, because it can visualize all your data in seconds using only one function! Check this out...</description>
      <category>R package reviews</category>
      <category>EDA</category>
      <category>videos</category>
      <guid>https://yuzar-blog.netlify.app/posts/2021-01-06-r-package-reviews-dataexplorer-explore-your-data</guid>
      <pubDate>2021-01-06</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2021-01-06-r-package-reviews-dataexplorer-explore-your-data/2.png" medium="image" type="image/png" width="1920" height="1080"/>
    </item>
    <item>
      <title>Survival analysis 2: parametric survival models</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2021-01-06-survival-analysis-2-parametric-survival-models</link>
      <description>The non-parametric Kaplan-Meier method (KM) can not describe survival probability by a smooth function, which means it can not predict anything. The parametric models (e.g. Exponential, Weibull etc.) can! Besides, in case where parametric models are appropriate, they are more exact, more effective and more informative than KM or Cox. However, unfortunately, this step is often left out due to the rear use of parametric models. In this post we’ll try to close this gap.</description>
      <category>survival analysis</category>
      <category>videos</category>
      <guid>https://yuzar-blog.netlify.app/posts/2021-01-06-survival-analysis-2-parametric-survival-models</guid>
      <pubDate>2021-01-06</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2021-01-06-survival-analysis-2-parametric-survival-models/thumbnail_survival_2.png" medium="image" type="image/png" width="1920" height="1080"/>
    </item>
    <item>
      <title>R package reviews {performance} check how good your model is! </title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2021-01-03-r-package-reviews-performance-check-how-good-your-model-is</link>
      <description>There are several indicators of model quality, e.g. $R^2$ or AIC, and several assumption for every model which supposed to be checked, e.g. normality of residuals, multicollinearity etc.. R provides solutions for every indicator or assumption you can imagine. However, they are usually spread around different packages and functions. {performance} package brings all of quality indicators and all of the assumption under one roof. Thus, for me it became the one-stop solution for modelling.</description>
      <category>R package reviews</category>
      <category>videos</category>
      <category>visualization</category>
      <guid>https://yuzar-blog.netlify.app/posts/2021-01-03-r-package-reviews-performance-check-how-good-your-model-is</guid>
      <pubDate>2021-01-03</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2021-01-03-r-package-reviews-performance-check-how-good-your-model-is/14.png" medium="image" type="image/png" width="1920" height="1080"/>
    </item>
    <item>
      <title>Survival analysis 1: a gentle introduction into Kaplan-Meier Curves</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2021-01-03-survival-analysis-1-a-gentle-introduction-into-kaplan-meier-curves</link>
      <description>Survival time analysis is necessary in any study which investigates the time to a particular outcome of interest. Cancer studies in the medicine and the first failure of the car in the engineering field (failure time analysis) are good examples. The outcome of interest could be death, remission to relapse, progression, or failure. Point in time of reaching that outcome is generally called the event. Thank goodness, not every “event” is fatal 😃, but can sometimes even be a favorable outcome such as discharge from hospital. And thus, survival analysis is also a generic term, because it is not only about survival.</description>
      <category>survival analysis</category>
      <category>videos</category>
      <guid>https://yuzar-blog.netlify.app/posts/2021-01-03-survival-analysis-1-a-gentle-introduction-into-kaplan-meier-curves</guid>
      <pubDate>2021-01-03</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2021-01-03-survival-analysis-1-a-gentle-introduction-into-kaplan-meier-curves/thumbnail_survival_1.png" medium="image" type="image/png" width="1920" height="1080"/>
    </item>
    <item>
      <title>R package reviews {janitor} clean your data!</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2021-01-02-r-package-reviews-janitor-clean-your-data</link>
      <description>Data Scientists spend up to 80% of their time cleaning and preparing data for analysis. " Happy families are all alike; every unhappy family is unhappy in its own way" — Leo Tolstoy. "Like families, tidy datasets are all alike but every messy dataset is messy in its own way" - Hadley Wickham. Thats when "janitor" helps to clean the mess.</description>
      <category>R package reviews</category>
      <category>videos</category>
      <guid>https://yuzar-blog.netlify.app/posts/2021-01-02-r-package-reviews-janitor-clean-your-data</guid>
      <pubDate>2021-01-02</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2021-01-02-r-package-reviews-janitor-clean-your-data/11.png" medium="image" type="image/png" width="1920" height="1080"/>
    </item>
    <item>
      <title>How to visualize models, their assumptions and post-hocs</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2021-01-01-how-to-visualize-models-their-assumptions-and-post-hocs</link>
      <description>A picture is worth a thousand words! This article shows how to visualize results of 16 different models in R: from a simple linear model to a multiple-additive-non-linear-mixed-effects model. Among them are logistic, multinomial, additive and survival models with and without interactions. **Goal: minimum R code &amp; maximum output!** We'll also go a bit beyond only model visualization. So, don't miss the bonuses 😉.</description>
      <category>visualization</category>
      <category>videos</category>
      <category>models</category>
      <guid>https://yuzar-blog.netlify.app/posts/2021-01-01-how-to-visualize-models-their-assumptions-and-post-hocs</guid>
      <pubDate>2021-01-01</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2021-01-01-how-to-visualize-models-their-assumptions-and-post-hocs/thumbnail_visualize_models.png" medium="image" type="image/png" width="1920" height="1080"/>
    </item>
    <item>
      <title>How to create a blog or a website in R with {Distill} package</title>
      <dc:creator>Yury Zablotski</dc:creator>
      <link>https://yuzar-blog.netlify.app/posts/2020-12-26-how-to-create-a-blog-or-a-website-in-r-with-distill-package</link>
      <description>If you're not online, you don't exist. A personal webpage or a blog became the business card of the digital century. It shows who you are and what you are capable of. Thus: show, don't tell.</description>
      <category>R &amp; the Web</category>
      <category>videos</category>
      <guid>https://yuzar-blog.netlify.app/posts/2020-12-26-how-to-create-a-blog-or-a-website-in-r-with-distill-package</guid>
      <pubDate>2020-12-26</pubDate>
      <media:content url="https://yuzar-blog.netlify.app/posts/2020-12-26-how-to-create-a-blog-or-a-website-in-r-with-distill-package/images/thumbnail.png" medium="image" type="image/png" width="1920" height="1080"/>
    </item>
  </channel>
</rss>
